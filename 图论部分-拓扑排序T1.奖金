var
n,i,x,j,count,y,sum,m,s,k:longint; 
c,d,p:array [0..10000] of integer; 
f:array [0..10001,0..10001] of integer; 
book:array [0..10001] of boolean; 
begin
  readln(n,m); 
  for i:=1 to m do
  begin readln(x,y);d[x]:=d[x]+1;inc(c[y]);f[y,c[y]]:=x;end; 
//读入工资高的x，工资低的y，x的入边加一条，y的第c[y]个后代记录在f[y,c[y]]中
  fillchar(book,sizeof(book),false);sum:=100; 
//标记数组book，sum为其实发工资的最低钱数
  while true do 
    begin
      fillchar(p,sizeof(p),0);k:=0; 
      for i:=1 to n do
        if (not book[i]) and (d[i]=0) then begin inc(count);s:=s+sum;book[i]:=true;inc(k);p[k]:=i;end; 
//找到入度为0的点，并且以前没用过，则总计数器加一，找到一个入度为0的点，就发sum元
      for i:=1 to k do for j:=1 to c[p[i]] do dec(d[f[p[i],j]]); 
//对于这些收集到数组里的点，然后分别删除它们所有的连接的边
      inc(sum); //为下一轮要发工资的人做准备
if count=n then break;//如果全部找完，则退出
if k=0 then begin 
writeln('Poor Xed');exit;end;end;
//如果此轮没有找到任何点，并且count≠n，就输出判错条件
writeln(s); //输出结果
end.
