差分约束系统初步
1.差分约束的实质：最短路径
2.差分约束的含义：一个系统由n个变量和m个不等式（限制条件）组成，求解问题
3.差分约束的基本形式:	Xi-Xj<=Ak
	举例：
	x1-x0<=2••••••○1
	x2-x0<=7••••••○2
	x3-x0<=8••••••○3
	x2-x1<=3••••••○4
	x3-x2<=2••••••○5
3.问题的基本类型:
解的存在性；最大（或最小）值问题；符号变形问题。
4.基本分析方法:
详细参见Blog夜深人静写算法的分析，和最短路本质相同，点这里
（访问网址：http://www.cppblog.com/menjitianya/archive/2015/11/19/212292.html）
5.问题求解
解的存在性：使用最短路径判断出给出的图中是否有负环，若有负环，则证明解不存在。
最大（或最小）值问题：首先判断解是否存在，在存在的情况下，若给定两变量模拟出的点分别处于不连通的两个模块（图），则证明解无穷，因为没有互相限制的关系，若不属于以上两种情况，则有且有固定解数。
符号变形问题（上文博客中有详细解释）：
不等式xi-xj<=k
换号，xi-xj>=k，只要稍作处理xj-xi<=-k，即可。
変号，xi-xj<k，大多数是整数情况，处理为：xi-xj<=k-1即可。
特殊情况xi-xj=k，将其看做xi-xj>=k和xi-xj<=k即可
6.选择方法：
上述推论可知判断负环为思路中重要部分，故SPFA算法可准确且高效率完成算法。
7.存储结构：
链式前向星较为方便，高效
8.插入方法
见博客中不等式与边信息的转换，以及如何确定起点终点及权值。
