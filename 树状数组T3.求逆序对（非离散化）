var 
n,i,temp:longint;
k:int64; 
p,c:array [0..100001] of longint;
function lowbit(x:int64):int64;
begin
  lowbit:=(-x) and x;
end;

procedure change(x:int64);
begin
//从前向后更新节点
  while (x<=n) do
    begin
      c[x]:=c[x]+1;
      x:=x+lowbit(x);//更新它的父亲节点
    end;
end;

function sum(x:int64):int64;
var s:longint;
begin
  s:=0;
  while x>0 do
    begin
      s:=s+c[x];
      x:=x-lowbit(x);//从后向前求和节点
    end;
  sum:=s;
end;

begin
  readln(n);
  for i:=1 to n do
    read(p[i]);
  for i:=1 to n do
    begin
      change(p[i]);
      k:=k+(i-sum(p[i]));
    end;
  writeln(k);
end.

//请注意，此题不可以用longint，从数据方面来看，只可用int64解决问题

