var
i,n,m,flag,sum,k,root1,root2,m1,x,y,z:longint;
a:array [0..10001,0..4] of longint;
t:array [0..2001,0..2001] of longint;
f:array [0..2001] of longint;

procedure swap(var x,y:longint);
var temp:longint;
begin
  temp:=x;x:=y;y:=temp;
end;

procedure qsort(low,high:longint);
var i,j,mid,temp:longint;
begin
  i:=low;j:=high;mid:=a[(i+j) div 2,3];
  repeat
    while a[i,3]<mid do i:=i+1;
    while a[j,3]>mid do j:=j-1;
    if i<=j then
      begin
        swap(a[i,1],a[j,1]);
        swap(a[i,2],a[j,2]);
        swap(a[i,3],a[j,3]);
        i:=i+1; j:=j-1;
      end;
  until i>j;
  if i<high then qsort(i,high);
  if j>low then qsort(low,j);
end;

function search(p:longint):longint;
begin
  if f[p]=p then exit(f[p]);
  f[p]:=search(f[p]);
  exit(f[p]);
end;

procedure union(root1,root2:longint);
begin
  f[root2]:=root1;
end;

begin
  readln(n,m);
  m1:=0;
  for i:=1 to n do f[i]:=i;
  for i:=1 to m do
    begin
      readln(flag,x,y,z);
      if flag=1 then
      begin
        root1:=search(x); root2:=search(y);
        f[root2]:=root1;
        t[x,y]:=1;
        t[y,x]:=1;
        sum:=sum+z;
      end
      else begin inc(m1);a[m1,1]:=x;a[m1,2]:=y;a[m1,3]:=z;end;
    end;
  m:=m1;
  qsort(1,m);
  for i:=1 to m do
    begin
      root1:=search(a[i,1]); root2:=search(a[i,2]);
      if root1<>root2 then
        begin
          union(root1,root2);
          sum:=sum+a[i,3];
          inc(k);
        end;
      if k=n then break;
    end;
  writeln(sum);
end.
