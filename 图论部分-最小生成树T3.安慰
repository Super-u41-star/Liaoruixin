var
n,i,x,y,z,a1,a2,sum,m,k,min:longint;
a:array [0..1000001,0..3] of longint;
f,e:array [0..1000001] of longint;
function search(x:longint):longint;
begin
  if f[x]=x then exit(x);
  f[x]:=search(f[x]);
  exit(f[x]);
end;

procedure union(x,y:longint);
begin
  f[y]:=x;
end;

procedure qsort(low,high:longint);
var i,j,mid,temp:longint;
begin
  i:=low;j:=high;mid:=a[(i+j) div 2,3];
  repeat
    while a[i,3]<mid do i:=i+1;
    while a[j,3]>mid do j:=j-1;
    if i<=j then
    begin
      temp:=a[i,1];a[i,1]:=a[j,1];a[j,1]:=temp;
      temp:=a[i,2];a[i,2]:=a[j,2];a[j,2]:=temp;
      temp:=a[i,3];a[i,3]:=a[j,3];a[j,3]:=temp;
      inc(i);dec(j);
    end;
  until i>j;
  if i<high then qsort(i,high);
  if j>low then qsort(low,j);
end;

begin
  readln(n,m);
  for i:=1 to n do f[i]:=i;//并查集的父亲结点
  min:=maxlongint;
  for i:=1 to n do begin readln(e[i]);if e[i]<min then min:=e[i];end;
//找一个最小的起点，为后面求结果用
  for i:=1 to m do
    begin
      readln(x,y,z);
      a[i,1]:=x;a[i,2]:=y;a[i,3]:=z*2+e[y]+e[x];
//a[i,1]表示起点，a[i,2]表示终点，a[i,3]表示长度（花费）
    end;
  qsort(1,m);k:=0;
//排序
  sum:=0;
  for i:=1 to m do
    begin
      a1:=search(a[i,1]);a2:=search(a[i,2]);//如果不在同一集合内
      if a1<>a2 then
      begin
        union(a1,a2);  inc(k);
        sum:=sum+a[i,3];//就合并，并加上值
        if k=n-1 then break;
      end;
//如果在同一集合内，相连就会形成环
    end;
  writeln(sum+min);//输出结果
end.

